{"version":3,"sources":["webpack:///webpack/bootstrap 4279c4aa765251f3c1dd","webpack:///./js/main.jsx","webpack:///./~/katakata/lib/index.js","webpack:///./~/katakata/src/katakata.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA;AACA,8BAA6B,sDAAsD;AACnF;;;;;;;;ACFA;;AAEA;;;;;;;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB,8BAA8B;AAC/C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA,QAAO;AACP;AACA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,0D;AACA;;AAEA;;AAEA","file":"output.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 4279c4aa765251f3c1dd\n **/","var Katakata = require('katakata');\nvar katakata = new Katakata({ 'text': 'what |you |want |to |show.', 'devider': '|'})\nkatakata.run();\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./js/main.jsx\n ** module id = 0\n ** module chunks = 0\n **/","var katakata = require('../src/katakata');\n\nmodule.exports = katakata;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/katakata/lib/index.js\n ** module id = 1\n ** module chunks = 0\n **/","class Katakata {\n  constructor(config){\n    this.setConfig(config.target,\n        config.text,\n        config.devider,\n        config.intervalMinMSec,\n        config.intervalMaxMsec,\n        config.debug);\n  }\n\n  setConfig(target = '#katakata', text = 'katakata', devider = ' ', intervalMinMSec = 100, intervalMaxMsec = 400, debug = false){\n    this.$target = document.querySelector(target);\n    this.text = text;\n    this.devider = devider;\n    this.intervalMinMSec = intervalMinMSec;\n    this.intervalMaxMsec = intervalMaxMsec;\n    this.characters = this.characters();\n    this.innerChars = [];\n    this.typingMachine = this.typeGenerate();\n    if ( debug ){ window.katakataObject = this; }\n  }\n\n  characters(){\n    return this.text.split('').map((char) => {\n      return {\n        'char': char,\n        'interval': this.getInterval(char)\n      }\n    })\n  }\n\n  getInterval(char){\n    var intervalBase = this.getIntervalBase();\n    var interval = (char == this.devider) ? intervalBase * 3 : intervalBase;\n    return (interval < 1000) ? interval : 1000;\n  }\n\n  getIntervalBase(){\n    return this.intervalMinMSec + Math.floor(Math.random() * (this.intervalMaxMsec - this.intervalMinMSec));\n  }\n\n  * typeGenerate(){\n    yield* this.characters;\n  }\n\n  run(){\n    let promise = this.typeCharPromise();\n    this.typingController(promise);\n  }\n\n  typingController(promise){\n    promise.then(()=>{\n      this.typingController(this.typeCharPromise());\n    })\n  }\n\n  typeCharPromise(){\n    return new Promise((resolve, reject)=>{\n      var result = this.typingMachine.next();\n\n      // 必要であればセルを配置 \n      this.setCellIfNecesasry();\n\n      // 処理全体の終了判定\n      if ( result['done'] ){\n        this.enter(null);\n        return;\n      }\n\n      // 表示を更新\n      this.enterOrType(result, resolve);\n    })\n  }\n\n  setCellIfNecesasry(){\n    if ( this.activeCell == null ){\n      var typingCell = document.createElement('span');\n      typingCell.classList.add('typing');\n      typingCell.classList.add('on-edit');\n      this.$target.appendChild(typingCell);\n      this.activeCell = typingCell;\n    }\n  }\n\n  enterOrType(result, resolve){\n    if ( result['value']['char'] == this.devider ){\n      this.enter(resolve);\n    } else {\n      this.type(result, resolve);\n    }\n  }\n\n  type(result, resolve){\n    setTimeout(()=>{\n      this.typingBase(result['value']['char']);\n      resolve();\n    },result['value']['interval'])\n  }\n\n  enter(resolve){\n    setTimeout(()=>{\n      this.activeCell.classList.remove('on-edit');\n      if ( resolve == null){\n        return;\n      } else {\n        this.activeCell = null;\n        this.innerChars = [];\n        resolve();\n      }\n    }, 600) // 余韻\n  }\n\n  typingBase(char){\n    this.insertChar(char);\n    this.showText();\n  }\n\n  insertChar(char){\n    this.innerChars.push(char);\n  }\n\n  showText(){\n    this.activeCell.innerText = this.innerChars.join(''); \n  }\n\n}\n\nmodule.exports = Katakata;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/katakata/src/katakata.js\n ** module id = 2\n ** module chunks = 0\n **/"],"sourceRoot":""}