{"version":3,"sources":["webpack:///webpack/bootstrap 6efe91fae2c00dc44361","webpack:///./js/main.jsx","webpack:///./~/katakata/index.js","webpack:///./~/katakata/lib/katakata.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,uBAAe;AACf;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;;;;;;ACtCA;AACA,8BAA6B,2CAA2C;AACxE;;;;;;;;ACFA;;AAEA;;;;;;;ACFA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAiB,8BAA8B;AAC/C;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,QAAO;AACP,MAAK;AACL;;AAEA;AACA;AACA;AACA,MAAK;AACL;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,uD;AACA;AACA;;AAEA","file":"output.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 6efe91fae2c00dc44361\n **/","var Katakata = require('katakata');\nvar katakata = new Katakata({ 'text': '<Project Name/>', 'debug': true })\nkatakata.run();\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./js/main.jsx\n ** module id = 0\n ** module chunks = 0\n **/","var katakata = require('./lib/katakata');\n\nmodule.exports = katakata;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/katakata/index.js\n ** module id = 1\n ** module chunks = 0\n **/","class Katakata {\n  constructor(config){\n    this.setConfig(config.target, config.text, config.intervalMinSec, config.intervalMaxSec, config.debug);\n  }\n\n  setConfig(target = '#katakata', text = 'katakata', intervalMinSec = 200, intervalMaxSec = 600, debug = false){\n    this.$target = document.querySelector(target);\n    this.text = text;\n    this.intervalMinSec = intervalMinSec;\n    this.intervalMaxSec = intervalMaxSec;\n    this.characters = this.characters();\n    this.innerChars = [];\n    if ( debug ){ window.katakataObject = this; }\n  }\n\n  run(){\n    this.startEdit();\n    this.type();\n  }\n\n  type(){\n    this.typingMachine = this.typeGenerate();\n    let promise = this.typeCharPromise();\n    this.typingController(promise);\n  }\n\n  startEdit(){\n    this.$target.classList.add('on-edit');\n  }\n\n  finishEdit(){\n    this.$target.classList.remove('on-edit');\n  }\n\n  characters(){\n    return this.text.split('').map((char) => {\n      return {\n        'char': char,\n        'interval': this.getInterval(char)\n      }\n    })\n  }\n\n  getInterval(char){\n    var intervalBase = this.getIntervalBase();\n    var interval = (char == ' ') ? intervalBase * 3 : intervalBase;\n    console.log(interval);\n    return (interval < 1000) ? interval : 1000;\n  }\n\n  getIntervalBase(){\n    return this.intervalMinSec - 1 + Math.floor(Math.random() * this.intervalMaxSec);\n  }\n\n  * typeGenerate(){\n    yield* this.characters;\n  }\n\n  typeCharPromise(){\n    return new Promise((resolve, reject)=>{\n      var result = this.typingMachine.next();\n      if ( result['done'] ){\n        this.finishEdit();\n        return;\n      }\n\n      setTimeout(()=>{\n        this.typingBase(result['value']['char']);\n        resolve();\n      },result['value']['interval'])\n    })\n  }\n\n  typingController(promise){\n    promise.then(()=>{\n      this.typingController(this.typeCharPromise());\n    })\n  }\n\n  typingBase(char){\n    this.insertChar(char);\n    this.typeText();\n  }\n\n  insertChar(char){\n    this.innerChars.push(char);\n  }\n\n  typeText(){\n    this.$target.innerText = this.innerChars.join(''); \n  }\n}\n\nmodule.exports = Katakata;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/katakata/lib/katakata.js\n ** module id = 2\n ** module chunks = 0\n **/"],"sourceRoot":""}